services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./services/api:/app
    environment:
      - ENVIRONMENT=development
    restart: unless-stopped
    depends_on:
      - user
      - product

  user:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./services/user:/app
    environment:
      - ENVIRONMENT=development
      - POSTGRES_SERVER=postgres_user
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_db
      - POSTGRES_PORT=5432
    depends_on:
      postgres_user:
        condition: service_healthy
    restart: unless-stopped

  product:
    build:
      context: ./services/product
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./services/product:/app
    environment:
      - ENVIRONMENT=development
      - POSTGRES_SERVER=postgres_product
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_db
      - POSTGRES_PORT=5432
    depends_on:
      postgres_product:
        condition: service_healthy
    restart: unless-stopped

  postgres_user:
    image: postgres:15-alpine
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres_product:
    image: postgres:15-alpine
    volumes:
      - postgres_product_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_db
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_user_data:
  postgres_product_data: 